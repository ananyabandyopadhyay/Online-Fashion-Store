name: CI/CD Pipeline

on:
  push:
    branches:
      - production
      - staging
      - development

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install Dependencies
        run: |
          rm -rf node_modules package-lock.json
          npm install
      - name: Build Project
        run: npm run build

      - name: Cache node_modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'

      - name: Install Dependencies
        run: npm install

      - name: Install Vercel CLI
        run: npm install -g vercel  # âœ… Install Vercel CLI

      - name: Deploy to Development
        if: github.ref == 'refs/heads/development'
        run: vercel --token ${{ secrets.VERCEL_TOKEN }} --yes --prod

      - name: Deploy to Staging
        if: github.ref == 'refs/heads/staging'
        run: vercel --token ${{ secrets.VERCEL_TOKEN }} --yes --prod

      - name: Deploy to Production
        if: github.ref == 'refs/heads/production'
        run: vercel --token ${{ secrets.VERCEL_TOKEN }} --yes --prod